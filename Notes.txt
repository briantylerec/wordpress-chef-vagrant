1. Preparativos iniciales
Asegúrate de tener instalados los siguientes programas:

Vagrant (https://www.vagrantup.com/)
VirtualBox (https://www.virtualbox.org/)
Chef Development Kit (ChefDK) (https://downloads.chef.io/)

2. Crea el entorno de Vagrant
Crea una carpeta de proyecto:

bash
Copy code
mkdir wordpress-vagrant-chef
cd wordpress-vagrant-chef
Inicializa un archivo Vagrantfile:

bash
Copy code
vagrant init
Edita el Vagrantfile: Reemplaza el contenido con lo siguiente:

ruby
Copy code
Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64" # Ubuntu 18.04 LTS
  config.vm.network "forwarded_port", guest: 80, host: 8080
  config.vm.provision "chef_zero" do |chef|
    chef.cookbooks_path = "cookbooks"
    chef.add_recipe "apache"
    chef.add_recipe "mysql"
    chef.add_recipe "php"
    chef.add_recipe "wordpress"
  end
end

3. Configura los cookbooks de Chef
Inicializa el directorio de cookbooks:

bash
Copy code
mkdir cookbooks
cd cookbooks
Genera cookbooks para los componentes necesarios:

bash
Copy code
chef generate cookbook apache
chef generate cookbook mysql
chef generate cookbook php
chef generate cookbook wordpress

4. Configura los cookbooks
Edita cada uno de los cookbooks para instalar los componentes necesarios.

Cookbook: apache
Edita recipes/default.rb:

ruby
Copy code
package "apache2" do
  action :install
end

service "apache2" do
  action [:enable, :start]
end
Asegúrate de que Apache esté funcionando correctamente.

Cookbook: mysql
Edita recipes/default.rb:

ruby
Copy code
package "mysql-server" do
  action :install
end

service "mysql" do
  action [:enable, :start]
end

bash "create_database" do
  code <<-EOH
    mysql -uroot -e "CREATE DATABASE wordpress;"
    mysql -uroot -e "CREATE USER 'wordpress_user'@'localhost' IDENTIFIED BY 'password';"
    mysql -uroot -e "GRANT ALL PRIVILEGES ON wordpress.* TO 'wordpress_user'@'localhost';"
    mysql -uroot -e "FLUSH PRIVILEGES;"
  EOH
end
Cookbook: php
Edita recipes/default.rb:

ruby
Copy code
package "php" do
  action :install
end

package "php-mysql" do
  action :install
end
Cookbook: wordpress
Edita recipes/default.rb:

ruby
Copy code
bash "download_wordpress" do
  code <<-EOH
    wget https://wordpress.org/latest.tar.gz
    tar -xzvf latest.tar.gz -C /var/www/html
    mv /var/www/html/wordpress /var/www/html/blog
    chown -R www-data:www-data /var/www/html/blog
    chmod -R 755 /var/www/html/blog
  EOH
end

template "/var/www/html/blog/wp-config.php" do
  source "wp-config.php.erb"
  mode "0644"
  owner "www-data"
  group "www-data"
end
Crea la plantilla wp-config.php.erb en el directorio cookbooks/wordpress/templates/default/wp-config.php.erb:

php
Copy code
<?php
define( 'DB_NAME', 'wordpress' );
define( 'DB_USER', 'wordpress_user' );
define( 'DB_PASSWORD', 'password' );
define( 'DB_HOST', 'localhost' );
define( 'DB_CHARSET', 'utf8' );
define( 'DB_COLLATE', '' );
$table_prefix = 'wp_';
define( 'WP_DEBUG', false );
if ( !defined('ABSPATH') )
    define( 'ABSPATH', dirname(__FILE__) . '/' );
require_once( ABSPATH . 'wp-settings.php' );
?>

5. Inicia el entorno
Inicia Vagrant:

bash
Copy code
vagrant up
Accede a WordPress: Abre tu navegador y ve a http://localhost:8080/blog. Sigue el asistente de instalación de WordPress.

6. Prueba y depuración
Si algo no funciona, revisa los logs de Chef y Vagrant:
bash
Copy code
vagrant ssh
Luego verifica los servicios con:
bash
Copy code
systemctl status apache2
systemctl status mysql
